CMAKE_MINIMUM_REQUIRED(VERSION 3.14)
PROJECT(simple )
set(CMAKE_USE_RELATIVE_PATHS ON)

message("install module with path:" ${CXB_MODULE_DIST})

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CXB_MODULE_DIST})
SET( CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CXB_MODULE_DIST})
SET( CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CXB_MODULE_DIST})
SET( CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CXB_MODULE_DIST})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CXB_MODULE_DIST})
SET( CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CXB_MODULE_DIST})
SET( CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CXB_MODULE_DIST})
SET( CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CXB_MODULE_DIST})

# set(CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/binary/)
# set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/binary/lib)

set (CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH};${PROJECT_SOURCE_DIR}/cmake")

set_property(GLOBAL PROPERTY USE_FOLDERS ON) 
add_definitions(-DNAPI_DISABLE_CPP_EXCEPTIONS)

execute_process(COMMAND node -p "require('node-addon-api').include"
        WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
        OUTPUT_VARIABLE NODE_ADDON_API_DIR
        )
string(REPLACE "\n" "" NODE_ADDON_API_DIR ${NODE_ADDON_API_DIR})
string(REPLACE "\"" "" NODE_ADDON_API_DIR ${NODE_ADDON_API_DIR})

add_library(simple SHARED
				index.cpp
				)
				
if(APPLE)
	macro (set_xcode_property TARGET XCODE_PROPERTY XCODE_VALUE)
            set_property (TARGET ${TARGET} PROPERTY XCODE_ATTRIBUTE_${XCODE_PROPERTY}
                ${XCODE_VALUE})
    endmacro (set_xcode_property)
	set_xcode_property(simple GCC_SYMBOLS_PRIVATE_EXTERN YES)	
	target_compile_options(simple	
		PRIVATE -fvisibility-hidden	
	)
endif()

target_include_directories(${PROJECT_NAME} PRIVATE ${NODE_ADDON_API_DIR} ${CMAKE_JS_INC})
target_link_libraries(simple
				${CMAKE_JS_LIB}
			 )
target_compile_features(simple PUBLIC cxx_std_11)
set(CMAKE_SHARED_LIBRARY_SUFFIX ".node")
set(CMAKE_SHARED_LIBRARY_PREFIX "")

